#TODO: Revisar

unset(CLOUDCOMPARE_FOUND)

#SET(CLOUDCOMPARE_DIR "" CACHE PATH "Root folder of CloudCompare dependency")

list(APPEND CLOUDCOMPARE_CHECK_INCLUDE_DIRS
  /opt/local/include
  /opt/local/include/ufsparse # Mac OS X
  /usr/local/homebrew/include # Mac OS X
  /usr/local/include
  /usr/include)
list(APPEND CLOUDCOMPARE_CHECK_LIBRARY_DIRS
  /opt/local/lib
  /opt/local/lib/ufsparse # Mac OS X
  /usr/local/homebrew/lib # Mac OS X
  /usr/local/lib
  /usr/lib)
# Additional suffixes to try appending to each search path.
list(APPEND CLOUDCOMPARE_CHECK_PATH_SUFFIXES
  CloudCompare) # Windows/Ubuntu
  
include(FindPackageHandleStandardArgs)

###################################
# CLOUDCOMPARE_CORE
find_path(CLOUDCOMPARE_CORE_INCLUDE_DIR
  NAMES foo.h
  PATHS ${CLOUDCOMPARE_CORE_INCLUDE_DIRS}
)
find_library(CLOUDCOMPARE_CORE_LIBRARY
  NAMES CC_CORE_LIB
  PATHS ${CLOUDCOMPARE_CORE_LIBRARY_DIRS}
)
find_library(CLOUDCOMPARE_CORE_LIBRARY_DEBUG
  NAMES CC_CORE_LIBd
  PATHS ${CLOUDCOMPARE_CORE_LIBRARY_DEBUG_DIRS}
)

find_package_handle_standard_args(CLOUDCOMPARE_CORE
  FOUND_VAR CLOUDCOMPARE_CORE_FOUND
  REQUIRED_VARS
    CLOUDCOMPARE_CORE_LIBRARY
    CLOUDCOMPARE_CORE_LIBRARY_DEBUG
    CLOUDCOMPARE_CORE_INCLUDE_DIR
)

if(CLOUDCOMPARE_CORE_FOUND)
  set(CLOUDCOMPARE_CORE_LIBRARIES debug ${CLOUDCOMPARE_CORE_LIBRARY_DEBUG} optimized ${CLOUDCOMPARE_CORE_LIBRARY})
  set(CLOUDCOMPARE_CORE_INCLUDE_DIRS ${CLOUDCOMPARE_CORE_INCLUDE_DIR})
  set(CLOUDCOMPARE_CORE_DEFINITIONS ${CLOUDCOMPARE_CORE_CFLAGS_OTHER})
endif()
################################### 


###################################
# CLOUDCOMPARE_DB
find_path(CLOUDCOMPARE_DB_INCLUDE_DIR
  NAMES foo.h
  PATHS ${CLOUDCOMPARE_DB_INCLUDE_DIRS}
  PATH_SUFFIXES Foo
)
find_library(CLOUDCOMPARE_DB_LIBRARY
  NAMES QCC_DB_LIBd
  PATHS ${CLOUDCOMPARE_DB_LIBRARY_DIRS}
)
find_library(CLOUDCOMPARE_DB_LIBRARY_DEBUG
  NAMES QCC_DB_LIB
  PATHS ${CLOUDCOMPARE_DB_LIBRARY_DEBUG_DIRS}
)

find_package_handle_standard_args(CLOUDCOMPARE_DB
  FOUND_VAR CLOUDCOMPARE_DB_FOUND
  REQUIRED_VARS
    CLOUDCOMPARE_DB_LIBRARY
    CLOUDCOMPARE_DB_LIBRARY_DEBUG
    CLOUDCOMPARE_DB_INCLUDE_DIR
)

if(CLOUDCOMPARE_DB_FOUND)
  set(CLOUDCOMPARE_DB_LIBRARIES debug ${CLOUDCOMPARE_DB_LIBRARY_DEBUG} optimized ${CLOUDCOMPARE_DB_LIBRARY})
  set(CLOUDCOMPARE_DB_INCLUDE_DIRS ${CLOUDCOMPARE_DB_INCLUDE_DIR})
  set(CLOUDCOMPARE_DB_DEFINITIONS ${CLOUDCOMPARE_DB_CFLAGS_OTHER})
endif()
################################### 


###################################  
# CLOUDCOMPARE_GL
find_path(CLOUDCOMPARE_GL_INCLUDE_DIR
  NAMES foo.h
  PATHS ${CLOUDCOMPARE_GL_INCLUDE_DIRS}
  PATH_SUFFIXES Foo
)
find_library(CLOUDCOMPARE_GL_LIBRARY
  NAMES QCC_GL_LIB
  PATHS ${CLOUDCOMPARE_GL_LIBRARY_DIRS}
)   
find_library(CLOUDCOMPARE_GL_LIBRARY_DEBUG
  NAMES QCC_GL_LIBd
  PATHS ${CLOUDCOMPARE_GL_LIBRARY_DEBUG_DIRS}
)   

find_package_handle_standard_args(CLOUDCOMPARE_GL
  FOUND_VAR CLOUDCOMPARE_GL_FOUND
  REQUIRED_VARS
    CLOUDCOMPARE_GL_LIBRARY
    CLOUDCOMPARE_GL_LIBRARY_DEBUG
    CLOUDCOMPARE_GL_INCLUDE_DIR
)

if(CLOUDCOMPARE_GL_FOUND)
  set(CLOUDCOMPARE_GL_LIBRARIES debug ${CLOUDCOMPARE_GL_LIBRARY_DEBUG} optimized ${CLOUDCOMPARE_GL_LIBRARY} )
  set(CLOUDCOMPARE_GL_INCLUDE_DIRS ${CLOUDCOMPARE_GL_INCLUDE_DIR})
  set(CLOUDCOMPARE_GL_DEFINITIONS ${CLOUDCOMPARE_GL_CFLAGS_OTHER})
endif()
################################### 


###################################
# CLOUDCOMPARE_IO
find_path(CLOUDCOMPARE_IO_INCLUDE_DIR
  NAMES foo.h
  PATHS ${CLOUDCOMPARE_IO_INCLUDE_DIRS}
  PATH_SUFFIXES Foo
)
find_library(CLOUDCOMPARE_IO_LIBRARY
  NAMES QCC_IO_LIB
  PATHS ${CLOUDCOMPARE_IO_LIBRARY_DIRS}
)  
find_library(CLOUDCOMPARE_IO_LIBRARY_DEBUG
  NAMES QCC_IO_LIBd
  PATHS ${CLOUDCOMPARE_IO_LIBRARY_DEBUG_DIRS}
)  

find_package_handle_standard_args(CLOUDCOMPARE_IO
  FOUND_VAR CLOUDCOMPARE_IO_FOUND
  REQUIRED_VARS
    CLOUDCOMPARE_IO_LIBRARY
    CLOUDCOMPARE_IO_LIBRARY_DEBUG
    CLOUDCOMPARE_IO_INCLUDE_DIR
)

if(CLOUDCOMPARE_IO_FOUND)
  set(CLOUDCOMPARE_IO_LIBRARIES debug ${CLOUDCOMPARE_IO_LIBRARY_DEBUG} optimized  ${CLOUDCOMPARE_IO_LIBRARY})
  set(CLOUDCOMPARE_IO_INCLUDE_DIRS ${CLOUDCOMPARE_IO_INCLUDE_DIR})
  set(CLOUDCOMPARE_IO_DEFINITIONS ${CLOUDCOMPARE_IO_CFLAGS_OTHER})
endif()
################################### 
 
###################################
# CLOUDCOMPARE_FBO
find_path(CLOUDCOMPARE_FBO_INCLUDE_DIR
  NAMES foo.h
  PATHS ${CLOUDCOMPARE_FBO_INCLUDE_DIRS}
  PATH_SUFFIXES Foo
)
find_library(CLOUDCOMPARE_FBO_LIBRARY
  NAMES CC_FBO_LIB
  PATHS ${CLOUDCOMPARE_FBO_LIBRARY_DIRS}
)  
find_library(CLOUDCOMPARE_FBO_LIBRARY_DEBUG
  NAMES CC_FBO_LIBd
  PATHS ${CLOUDCOMPARE_FBO_LIBRARY_DEBUG_DIRS}
)  

find_package_handle_standard_args(CLOUDCOMPARE_FBO
  FOUND_VAR CLOUDCOMPARE_FBO_FOUND
  REQUIRED_VARS
    CLOUDCOMPARE_FBO_LIBRARY
    CLOUDCOMPARE_FBO_LIBRARY_DEBUG
    CLOUDCOMPARE_FBO_INCLUDE_DIR
)

if(CLOUDCOMPARE_FBO_FOUND)
  set(CLOUDCOMPARE_FBO_LIBRARIES debug ${CLOUDCOMPARE_FBO_LIBRARY_DEBUG} optimized ${CLOUDCOMPARE_FBO_LIBRARY})
  set(CLOUDCOMPARE_FBO_INCLUDE_DIRS ${CLOUDCOMPARE_FBO_INCLUDE_DIR})
  set(CLOUDCOMPARE_FBO_DEFINITIONS ${CLOUDCOMPARE_FBO_CFLAGS_OTHER})
endif()
################################### 


list(APPEND CLOUDCOMPARE_INCLUDE_DIRS
    ${CLOUDCOMPARE_CORE_INCLUDE_DIR}
    ${CLOUDCOMPARE_DB_INCLUDE_DIR}
    ${CLOUDCOMPARE_GL_INCLUDE_DIR}
    ${CLOUDCOMPARE_IO_INCLUDE_DIR}
    ${CLOUDCOMPARE_FBO_INCLUDE_DIR})  

    
#list(APPEND CLOUDCOMPARE_LIBRARIES
#    ${CLOUDCOMPARE_CORE_LIBRARY}
#    ${CLOUDCOMPARE_DB_LIBRARY}
#    ${CLOUDCOMPARE_GL_LIBRARY}
#    ${CLOUDCOMPARE_IO_LIBRARY}
#    ${CLOUDCOMPARE_FBO_LIBRARY}
#    ${ccViewer_LIBRARY})
#
#list(APPEND CLOUDCOMPARE_LIBRARIES_DEBUG
#    ${CLOUDCOMPARE_CORE_LIBRARY_DEBUG}
#    ${CLOUDCOMPARE_DB_LIBRARY_DEBUG}
#    ${CLOUDCOMPARE_GL_LIBRARY_DEBUG}
#    ${CLOUDCOMPARE_IO_LIBRARY_DEBUG}
#    ${CLOUDCOMPARE_FBO_LIBRARY_DEBUG}
#    ${ccViewer_LIBRARY_DEBUG})
    
list(APPEND CLOUDCOMPARE_LIBRARIES
    ${CLOUDCOMPARE_CORE_LIBRARIES}
    ${CLOUDCOMPARE_DB_LIBRARIES}
    ${CLOUDCOMPARE_GL_LIBRARIES}
    ${CLOUDCOMPARE_IO_LIBRARIES}
    ${CLOUDCOMPARE_FBO_LIBRARIES}
    )    
    
if (CLOUDCOMPARE_INCLUDE_DIRS AND CLOUDCOMPARE_LIBRARIES)
    set(CLOUDCOMPARE_FOUND TRUE)
    message(STATUS "Found CloudCompare")
    message(STATUS "  Includes : ${CLOUDCOMPARE_INCLUDE_DIRS}")
    message(STATUS "  Libraries : ${CLOUDCOMPARE_CORE_LIBRARY} ${CLOUDCOMPARE_DB_LIBRARY} ${CLOUDCOMPARE_GL_LIBRARY} ${CLOUDCOMPARE_IO_LIBRARY} ${CLOUDCOMPARE_FBO_LIBRARY}")
    #TODO: Revisar esto
    if(MSVC)
      add_compile_definitions(CC_VIEWER)
      add_compile_definitions(CC_USE_AS_DLL)
      add_compile_definitions(QCC_DB_USE_AS_DLL)
      add_compile_definitions(QCC_IO_USE_AS_DLL)
    endif(MSVC)
else()
    if(CLOUDCOMPARE_FIND_REQUIRED)
        message(FATAL_ERROR "Could not find CloudCompare")
    endif()
endif()
